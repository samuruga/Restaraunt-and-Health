<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20191.19.0417.1429                               -->
<workbook original-version='18.1' source-build='2019.1.3 (20191.19.0417.1429)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='biprj_0605' inline='true' name='federated.1r4yhan0qdkaqm1ezqn4k07gr04t' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='bi_proj_grp1' name='excel-direct.1c15mo30pst19o13cznj40cs4ncx'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/atyam/Desktop/Business Intelligence/BI-Project/bi_proj_grp1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1c15mo30pst19o13cznj40cs4ncx' name='bi_proj_grp1' table='[bi_proj_grp1$]' type='table'>
          <columns gridOrigin='A1:AN10001:no:A1:AN10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='categories' ordinal='1' />
            <column datatype='string' name='name' ordinal='2' />
            <column datatype='integer' name='is_open' ordinal='3' />
            <column datatype='string' name='city' ordinal='4' />
            <column datatype='string' name='state' ordinal='5' />
            <column datatype='real' name='latitude' ordinal='6' />
            <column datatype='real' name='longitude' ordinal='7' />
            <column datatype='integer' name='review_count' ordinal='8' />
            <column datatype='real' name='stars' ordinal='9' />
            <column datatype='integer' name='Year' ordinal='10' />
            <column datatype='string' name='StateDesc' ordinal='11' />
            <column datatype='string' name='CityName' ordinal='12' />
            <column datatype='string' name='GeographicLevel' ordinal='13' />
            <column datatype='string' name='DataSource' ordinal='14' />
            <column datatype='string' name='Category' ordinal='15' />
            <column datatype='integer' name='UniqueID' ordinal='16' />
            <column datatype='string' name='Measure' ordinal='17' />
            <column datatype='string' name='Data_Value_Unit' ordinal='18' />
            <column datatype='string' name='DataValueTypeID' ordinal='19' />
            <column datatype='string' name='Data_Value_Type' ordinal='20' />
            <column datatype='real' name='Data_Value' ordinal='21' />
            <column datatype='integer' name='PopulationCount' ordinal='22' />
            <column datatype='string' name='GeoLocation' ordinal='23' />
            <column datatype='string' name='CategoryID' ordinal='24' />
            <column datatype='string' name='MeasureId' ordinal='25' />
            <column datatype='integer' name='CityFIPS' ordinal='26' />
            <column datatype='string' name='Short_Question_Text' ordinal='27' />
            <column datatype='string' name='StateAbbr_y' ordinal='28' />
            <column datatype='string' name='PlaceName' ordinal='29' />
            <column datatype='integer' name='PlaceFIPS' ordinal='30' />
            <column datatype='integer' name='Population2010' ordinal='31' />
            <column datatype='real' name='ARTHRITIS_CrudePrev' ordinal='32' />
            <column datatype='real' name='BPHIGH_CrudePrev' ordinal='33' />
            <column datatype='real' name='BPMED_CrudePrev' ordinal='34' />
            <column datatype='real' name='CANCER_CrudePrev' ordinal='35' />
            <column datatype='real' name='CASTHMA_CrudePrev' ordinal='36' />
            <column datatype='real' name='DIABETES_CrudePrev' ordinal='37' />
            <column datatype='real' name='HIGHCHOL_CrudePrev' ordinal='38' />
            <column datatype='real' name='OBESITY_CrudePrev' ordinal='39' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>categories</remote-name>
            <remote-type>130</remote-type>
            <local-name>[categories]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>categories</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_open</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_open]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>is_open</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[review_count]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>review_count</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stars</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stars]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>stars</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>StateDesc</remote-name>
            <remote-type>130</remote-type>
            <local-name>[StateDesc]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>StateDesc</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CityName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CityName]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>CityName</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GeographicLevel</remote-name>
            <remote-type>130</remote-type>
            <local-name>[GeographicLevel]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>GeographicLevel</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DataSource</remote-name>
            <remote-type>130</remote-type>
            <local-name>[DataSource]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>DataSource</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UniqueID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[UniqueID]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>UniqueID</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measure</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Measure]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>Measure</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Data_Value_Unit</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Data_Value_Unit]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>Data_Value_Unit</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DataValueTypeID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[DataValueTypeID]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>DataValueTypeID</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Data_Value_Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Data_Value_Type]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>Data_Value_Type</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Data_Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Data_Value]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>Data_Value</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PopulationCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PopulationCount]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>PopulationCount</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GeoLocation</remote-name>
            <remote-type>130</remote-type>
            <local-name>[GeoLocation]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>GeoLocation</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CategoryID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CategoryID]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>CategoryID</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MeasureId</remote-name>
            <remote-type>130</remote-type>
            <local-name>[MeasureId]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>MeasureId</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CityFIPS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CityFIPS]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>CityFIPS</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Short_Question_Text</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Short_Question_Text]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>Short_Question_Text</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>StateAbbr_y</remote-name>
            <remote-type>130</remote-type>
            <local-name>[StateAbbr_y]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>StateAbbr_y</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PlaceName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PlaceName]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>PlaceName</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PlaceFIPS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PlaceFIPS]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>PlaceFIPS</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population2010</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population2010]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>Population2010</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ARTHRITIS_CrudePrev</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ARTHRITIS_CrudePrev]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>ARTHRITIS_CrudePrev</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BPHIGH_CrudePrev</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BPHIGH_CrudePrev]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>BPHIGH_CrudePrev</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BPMED_CrudePrev</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BPMED_CrudePrev]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>BPMED_CrudePrev</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CANCER_CrudePrev</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CANCER_CrudePrev]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>CANCER_CrudePrev</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CASTHMA_CrudePrev</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CASTHMA_CrudePrev]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>CASTHMA_CrudePrev</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DIABETES_CrudePrev</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DIABETES_CrudePrev]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>DIABETES_CrudePrev</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HIGHCHOL_CrudePrev</remote-name>
            <remote-type>5</remote-type>
            <local-name>[HIGHCHOL_CrudePrev]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>HIGHCHOL_CrudePrev</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OBESITY_CrudePrev</remote-name>
            <remote-type>5</remote-type>
            <local-name>[OBESITY_CrudePrev]</local-name>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias>OBESITY_CrudePrev</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[bi_proj_grp1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AN10001:no:A1:AN10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='ARTHRITIS CrudePrev' datatype='real' name='[ARTHRITIS_CrudePrev]' role='measure' type='quantitative' />
      <column caption='BPHIGH CrudePrev' datatype='real' name='[BPHIGH_CrudePrev]' role='measure' type='quantitative' />
      <column caption='BPMED CrudePrev' datatype='real' name='[BPMED_CrudePrev]' role='measure' type='quantitative' />
      <column caption='CANCER CrudePrev' datatype='real' name='[CANCER_CrudePrev]' role='measure' type='quantitative' />
      <column caption='CASTHMA CrudePrev' datatype='real' name='[CASTHMA_CrudePrev]' role='measure' type='quantitative' />
      <column caption='Category ID' datatype='string' name='[CategoryID]' role='dimension' type='nominal' />
      <column caption='City FIPS' datatype='integer' name='[CityFIPS]' role='measure' type='quantitative' />
      <column caption='City Name' datatype='string' name='[CityName]' role='dimension' type='nominal' />
      <column caption='DIABETES CrudePrev' datatype='real' name='[DIABETES_CrudePrev]' role='measure' type='quantitative' />
      <column caption='Data Source' datatype='string' name='[DataSource]' role='dimension' type='nominal' />
      <column caption='Data Value Type ID' datatype='string' name='[DataValueTypeID]' role='dimension' type='nominal' />
      <column caption='Data Value' datatype='real' name='[Data_Value]' role='measure' type='quantitative' />
      <column caption='Data Value Type' datatype='string' name='[Data_Value_Type]' role='dimension' type='nominal' />
      <column caption='Data Value Unit' datatype='string' name='[Data_Value_Unit]' role='dimension' type='nominal' />
      <column caption='Geo Location' datatype='string' name='[GeoLocation]' role='dimension' type='nominal' />
      <column caption='Geographic Level' datatype='string' name='[GeographicLevel]' role='dimension' type='nominal' />
      <column caption='HIGHCHOL CrudePrev' datatype='real' name='[HIGHCHOL_CrudePrev]' role='measure' type='quantitative' />
      <column caption='Measure Id' datatype='string' name='[MeasureId]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='OBESITY CrudePrev' datatype='real' name='[OBESITY_CrudePrev]' role='measure' type='quantitative' />
      <column caption='Place FIPS' datatype='integer' name='[PlaceFIPS]' role='measure' type='quantitative' />
      <column caption='Place Name' datatype='string' name='[PlaceName]' role='dimension' type='nominal' />
      <column caption='Population Count' datatype='integer' name='[PopulationCount]' role='measure' type='quantitative' />
      <column caption='Group - American' datatype='string' name='[Restaraunt - category (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[categories - Split 1]' new-bin='true'>
          <bin default-name='false' value='&quot;American&quot;'>
            <value>&quot;American (New)&quot;</value>
            <value>&quot;American (Traditional)&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Restaraunt - category (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[categories - Split 1]' new-bin='true'>
          <bin default-name='false' value='&quot;Restaraunt - Country&quot;'>
            <value>&quot;Afghan&quot;</value>
            <value>&quot;African&quot;</value>
            <value>&quot;American (New)&quot;</value>
            <value>&quot;American (Traditional)&quot;</value>
            <value>&quot;Argentine&quot;</value>
            <value>&quot;Asian Fusion&quot;</value>
            <value>&quot;Brazilian&quot;</value>
            <value>&quot;British&quot;</value>
            <value>&quot;Burmese&quot;</value>
            <value>&quot;Cantonese&quot;</value>
            <value>&quot;Caribbean&quot;</value>
            <value>&quot;Chinese&quot;</value>
            <value>&quot;Egyptian&quot;</value>
            <value>&quot;Ethiopian&quot;</value>
            <value>&quot;Filipino&quot;</value>
            <value>&quot;French&quot;</value>
            <value>&quot;German&quot;</value>
            <value>&quot;Greek&quot;</value>
            <value>&quot;Hawaiian&quot;</value>
            <value>&quot;Himalayan/Nepalese&quot;</value>
            <value>&quot;Indian&quot;</value>
            <value>&quot;Irish&quot;</value>
            <value>&quot;Italian&quot;</value>
            <value>&quot;Japanese&quot;</value>
            <value>&quot;Korean&quot;</value>
            <value>&quot;Latin American&quot;</value>
            <value>&quot;Lebanese&quot;</value>
            <value>&quot;Malaysian&quot;</value>
            <value>&quot;Mediterranean&quot;</value>
            <value>&quot;Mexican&quot;</value>
            <value>&quot;Middle Eastern&quot;</value>
            <value>&quot;Modern European&quot;</value>
            <value>&quot;Mongolian&quot;</value>
            <value>&quot;Moroccan&quot;</value>
            <value>&quot;Pakistani&quot;</value>
            <value>&quot;Pan Asian&quot;</value>
            <value>&quot;Persian/Iranian&quot;</value>
            <value>&quot;Peruvian&quot;</value>
            <value>&quot;Polish&quot;</value>
            <value>&quot;Puerto Rican&quot;</value>
            <value>&quot;Russian&quot;</value>
            <value>&quot;Salvadoran&quot;</value>
            <value>&quot;Scandinavian&quot;</value>
            <value>&quot;Spanish&quot;</value>
            <value>&quot;Taiwanese&quot;</value>
            <value>&quot;Tex-Mex&quot;</value>
            <value>&quot;Thai&quot;</value>
            <value>&quot;Turkish&quot;</value>
            <value>&quot;Vietnamese&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Short Question Text' datatype='string' name='[Short_Question_Text]' role='dimension' type='nominal' />
      <column caption='StateAbbr y' datatype='string' name='[StateAbbr_y]' role='dimension' type='nominal' />
      <column caption='State Desc' datatype='string' name='[StateDesc]' role='dimension' type='nominal' />
      <column caption='Unique ID' datatype='integer' name='[UniqueID]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='Restaraunt - category' datatype='string' name='[categories - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1r4yhan0qdkaqm1ezqn4k07gr04t].[categories]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [categories], &quot;,&quot;, -1 ) )' />
      </column>
      <column caption='Categories' datatype='string' name='[categories]' role='dimension' type='nominal' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Is Open' datatype='integer' name='[is_open]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Review Count' datatype='integer' name='[review_count]' role='measure' type='quantitative' />
      <column caption='Stars' datatype='real' name='[stars]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[ARTHRITIS_CrudePrev]' derivation='Avg' name='[avg:ARTHRITIS_CrudePrev:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BPHIGH_CrudePrev]' derivation='Avg' name='[avg:BPHIGH_CrudePrev:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CANCER_CrudePrev]' derivation='Avg' name='[avg:CANCER_CrudePrev:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DIABETES_CrudePrev]' derivation='Avg' name='[avg:DIABETES_CrudePrev:qk]' pivot='key' type='quantitative' />
      <column-instance column='[HIGHCHOL_CrudePrev]' derivation='Avg' name='[avg:HIGHCHOL_CrudePrev:qk]' pivot='key' type='quantitative' />
      <column-instance column='[categories - Split 1]' derivation='None' name='[none:categories - Split 1:nk]' pivot='key' type='nominal' />
      <column-instance column='[ARTHRITIS_CrudePrev]' derivation='Sum' name='[sum:ARTHRITIS_CrudePrev:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BPHIGH_CrudePrev]' derivation='Sum' name='[sum:BPHIGH_CrudePrev:qk]' pivot='key' type='quantitative' />
      <column-instance column='[BPMED_CrudePrev]' derivation='Sum' name='[sum:BPMED_CrudePrev:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CANCER_CrudePrev]' derivation='Sum' name='[sum:CANCER_CrudePrev:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DIABETES_CrudePrev]' derivation='Sum' name='[sum:DIABETES_CrudePrev:qk]' pivot='key' type='quantitative' />
      <column-instance column='[HIGHCHOL_CrudePrev]' derivation='Sum' name='[sum:HIGHCHOL_CrudePrev:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='state, city'>
          <field>[state]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.187919' measure-ordering='alphabetic' measure-percentage='0.812081' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Restaraunt - category (group)]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Barbeque&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Caterers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Diners&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fruits &amp; Veggies&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Izakaya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pasta Shops&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Salad&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tapas Bars&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Acai Bowls&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bubble Tea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Convenience Stores&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fish &amp; Chips&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hookah Bars&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Meat Shops&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Popcorn Shops&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Southern&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wine Tasting Classes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arcades&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cafes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dance Clubs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Food Court&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hotels&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Mexican Cuisine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pubs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Street Vendors&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Beer Bar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chocolatiers &amp; Shops&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Do-It-Yourself Food&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gluten-Free&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kids Activities&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Personal Shopping&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Shaved Ice&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vegan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bars&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cheesesteaks&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dinner Theater&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gastropubs&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jazz &amp; Blues&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Patisserie/Cake Shop&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sandwiches&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tapas/Small Plates&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Arts &amp; Entertainment&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cafeteria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Delis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Food Delivery Services&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hotels &amp; Travel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nightlife&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ramen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sushi Bars&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Breakfast &amp; Brunch&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Colombian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fast Food&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Home &amp; Garden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lounges&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Poke&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Soul Food&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wine &amp; Spirits&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Active Life&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Buffets&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Creperies&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Flowers &amp; Gifts&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hospitals&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mortgage Brokers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pretzels&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Specialty Food&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wraps&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bowling&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Coffee &amp; Tea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Event Planning &amp; Services&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Health &amp; Medical&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Local Flavor&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Playgrounds&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Skin Care&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wedding Planning&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bagels&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cajun/Creole&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Desserts&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Food Stands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ice Cream &amp; Frozen Yogurt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Noodles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Restaraunt - Country&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Szechuan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bikes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cinema&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Doctors&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Golf&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kosher&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pet Stores&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shaved Snow&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vegetarian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bistros&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Clothing Rental&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Donuts&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grocery&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laotian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pharmacy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shopping&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Venues &amp; Event Spaces&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brasseries&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Coffee Roasteries&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Farmers Market&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Health Markets&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Local Services&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Plumbing&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Social Clubs&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Whiskey Bars&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Breweries&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Comfort Food&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Festivals&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Home Services&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Massage&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Police Departments&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Soup&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wine Bars&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Basque&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chicken Shop&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Discount Store&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gay Bars&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Juice Bars &amp; Smoothies&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Performing Arts&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Seafood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tours&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bakeries&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Casinos&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dim Sum&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Food Trucks&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Internet Cafes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Party &amp; Event Planning&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Restaurants&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tacos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Adult Entertainment&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burgers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cuban&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fondue&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hot Dogs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Music Venues&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Professional Services&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sports Bars&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Boat Repair&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cocktail Bars&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ethnic Food&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Halal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Live/Raw Food&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pizza&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shopping Centers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Waffles&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Beauty &amp; Spas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chicken Wings&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dive Bars&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gelato&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Karaoke&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Personal Chefs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Shanghainese&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Trinidadian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Butcher&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cupcakes&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Food&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hot Pot&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nail Salons&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pub Food&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Steakhouses&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:categories - Split 1:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Arcades&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bubble Tea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burmese&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Festivals&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Health Markets&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Internet Cafes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Meat Shops&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mediterranean&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Salad&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sushi Bars&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vietnamese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Acai Bowls&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cheesesteaks&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Diners&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Food Delivery Services&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hookah Bars&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Indian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Noodles&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pretzels&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Russian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vegetarian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Boat Repair&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chocolatiers &amp; Shops&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Do-It-Yourself Food&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fruits &amp; Veggies&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hotels&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Korean&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pasta Shops&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Social Clubs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Specialty Food&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Taiwanese&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bagels&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Butcher&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Convenience Stores&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Egyptian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grocery&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lounges&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pharmacy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seafood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tapas Bars&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Breakfast &amp; Brunch&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Buffets&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cantonese&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ethnic Food&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gluten-Free&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Local Flavor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mexican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Personal Chefs&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Soup&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Szechuan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wraps&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Asian Fusion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bowling&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cinema&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Doctors&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gastropubs&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hotels &amp; Travel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Latin American&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Patisserie/Cake Shop&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ramen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sports Bars&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tex-Mex&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Beer Bar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Casinos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Desserts&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Food&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hawaiian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kosher&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Mexican Cuisine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Polish&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Skin Care&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wine Bars&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Active Life&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;African&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chicken Shop&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dinner Theater&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Food Stands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hospitals&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Irish&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Plumbing&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Professional Services&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Salvadoran&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Venues &amp; Event Spaces&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Basque&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Coffee Roasteries&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dance Clubs&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Flowers &amp; Gifts&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;German&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kids Activities&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Music Venues&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Persian/Iranian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shopping&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tours&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brasseries&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazilian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clothing Rental&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Donuts&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gay Bars&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ice Cream &amp; Frozen Yogurt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lebanese&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Performing Arts&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Restaurants&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Steakhouses&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thai&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bakeries&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cafes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Creperies&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ethiopian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Halal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jazz &amp; Blues&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Moroccan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pizza&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shanghainese&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tapas/Small Plates&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barbeque&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cafeteria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cuban&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Filipino&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Home Services&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Juice Bars &amp; Smoothies&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pakistani&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Playgrounds&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shaved Ice&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Whiskey Bars&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Beauty &amp; Spas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Colombian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Delis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fondue&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greek&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Massage&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nail Salons&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peruvian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shopping Centers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Trinidadian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bikes&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Caterers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dim Sum&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Food Court&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Himalayan/Nepalese&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laotian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nightlife&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Popcorn Shops&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Puerto Rican&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vegan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Arts &amp; Entertainment&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burgers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Caribbean&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Event Planning &amp; Services&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Golf&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Local Services&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Middle Eastern&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Personal Shopping&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sandwiches&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tacos&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;British&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cocktail Bars&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fast Food&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gelato&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Live/Raw Food&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malaysian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Police Departments&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Soul Food&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Street Vendors&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Turkish&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Adult Entertainment&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;American (New)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chicken Wings&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Discount Store&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Food Trucks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hot Dogs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Italian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Poke&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pub Food&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Scandinavian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wine Tasting Classes&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bars&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cajun/Creole&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cupcakes&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fish &amp; Chips&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Karaoke&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mortgage Brokers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pan Asian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shaved Snow&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wine &amp; Spirits&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Breweries&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chinese&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Coffee &amp; Tea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Farmers Market&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Home &amp; Garden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Izakaya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Modern European&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pet Stores&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Southern&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wedding Planning&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American (Traditional)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bistros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comfort Food&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dive Bars&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Health &amp; Medical&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hot Pot&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Japanese&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Party &amp; Event Planning&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pubs&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Spanish&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Waffles&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1r4yhan0qdkaqm1ezqn4k07gr04t].[avg:ARTHRITIS_CrudePrev:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1r4yhan0qdkaqm1ezqn4k07gr04t].[sum:ARTHRITIS_CrudePrev:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1r4yhan0qdkaqm1ezqn4k07gr04t].[avg:DIABETES_CrudePrev:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1r4yhan0qdkaqm1ezqn4k07gr04t].[sum:DIABETES_CrudePrev:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1r4yhan0qdkaqm1ezqn4k07gr04t].[avg:CANCER_CrudePrev:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1r4yhan0qdkaqm1ezqn4k07gr04t].[sum:CANCER_CrudePrev:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1r4yhan0qdkaqm1ezqn4k07gr04t].[sum:BPMED_CrudePrev:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1r4yhan0qdkaqm1ezqn4k07gr04t].[avg:HIGHCHOL_CrudePrev:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1r4yhan0qdkaqm1ezqn4k07gr04t].[sum:HIGHCHOL_CrudePrev:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1r4yhan0qdkaqm1ezqn4k07gr04t].[avg:BPHIGH_CrudePrev:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1r4yhan0qdkaqm1ezqn4k07gr04t].[sum:BPHIGH_CrudePrev:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='State - Avg disease'>
      <table>
        <view>
          <datasources>
            <datasource caption='biprj_0605' name='federated.1r4yhan0qdkaqm1ezqn4k07gr04t' />
          </datasources>
          <datasource-dependencies datasource='federated.1r4yhan0qdkaqm1ezqn4k07gr04t'>
            <column caption='ARTHRITIS CrudePrev' datatype='real' name='[ARTHRITIS_CrudePrev]' role='measure' type='quantitative' />
            <column caption='BPHIGH CrudePrev' datatype='real' name='[BPHIGH_CrudePrev]' role='measure' type='quantitative' />
            <column caption='CANCER CrudePrev' datatype='real' name='[CANCER_CrudePrev]' role='measure' type='quantitative' />
            <column caption='DIABETES CrudePrev' datatype='real' name='[DIABETES_CrudePrev]' role='measure' type='quantitative' />
            <column caption='HIGHCHOL CrudePrev' datatype='real' name='[HIGHCHOL_CrudePrev]' role='measure' type='quantitative' />
            <column caption='Group - American' datatype='string' name='[Restaraunt - category (group) 1]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[categories - Split 1]' new-bin='true'>
                <bin default-name='false' value='&quot;American&quot;'>
                  <value>&quot;American (New)&quot;</value>
                  <value>&quot;American (Traditional)&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[ARTHRITIS_CrudePrev]' derivation='Avg' name='[avg:ARTHRITIS_CrudePrev:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BPHIGH_CrudePrev]' derivation='Avg' name='[avg:BPHIGH_CrudePrev:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CANCER_CrudePrev]' derivation='Avg' name='[avg:CANCER_CrudePrev:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DIABETES_CrudePrev]' derivation='Avg' name='[avg:DIABETES_CrudePrev:qk]' pivot='key' type='quantitative' />
            <column-instance column='[HIGHCHOL_CrudePrev]' derivation='Avg' name='[avg:HIGHCHOL_CrudePrev:qk]' pivot='key' type='quantitative' />
            <column caption='Restaraunt - category' datatype='string' name='[categories - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.1r4yhan0qdkaqm1ezqn4k07gr04t].[categories]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [categories], &quot;,&quot;, -1 ) )' />
            </column>
            <column caption='Categories' datatype='string' name='[categories]' role='dimension' type='nominal' />
            <column-instance column='[categories - Split 1]' derivation='None' name='[none:categories - Split 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1r4yhan0qdkaqm1ezqn4k07gr04t].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1r4yhan0qdkaqm1ezqn4k07gr04t].[avg:ARTHRITIS_CrudePrev:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1r4yhan0qdkaqm1ezqn4k07gr04t].[avg:BPHIGH_CrudePrev:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1r4yhan0qdkaqm1ezqn4k07gr04t].[avg:CANCER_CrudePrev:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1r4yhan0qdkaqm1ezqn4k07gr04t].[avg:DIABETES_CrudePrev:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1r4yhan0qdkaqm1ezqn4k07gr04t].[avg:HIGHCHOL_CrudePrev:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1r4yhan0qdkaqm1ezqn4k07gr04t].[Restaraunt - category (group) 1]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Afghan&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;African&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;American&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Argentine&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Asian Fusion&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Brazilian&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;British&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Burmese&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Cantonese&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Caribbean&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Chinese&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Colombian&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Cuban&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Egyptian&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Ethiopian&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;French&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;German&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Greek&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Hawaiian&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Himalayan/Nepalese&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Indian&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Irish&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Italian&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Japanese&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Korean&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Latin American&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Lebanese&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Malaysian&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Mediterranean&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Mexican&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Middle Eastern&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Modern European&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Mongolian&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Moroccan&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Pakistani&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Pan Asian&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Persian/Iranian&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Peruvian&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Polish&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Puerto Rican&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Russian&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Salvadoran&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Scandinavian&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Spanish&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Taiwanese&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Thai&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Turkish&quot;' />
              <groupfilter function='member' level='[Restaraunt - category (group) 1]' member='&quot;Vietnamese&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1r4yhan0qdkaqm1ezqn4k07gr04t].[none:categories - Split 1:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Afghan&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;African&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;American (New)&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;American (Traditional)&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Argentine&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Asian Fusion&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Brazilian&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;British&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Burmese&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Cantonese&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Caribbean&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Chinese&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Colombian&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Cuban&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Egyptian&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Ethiopian&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;French&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;German&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Greek&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Hawaiian&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Himalayan/Nepalese&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Indian&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Irish&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Italian&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Japanese&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Korean&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Latin American&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Lebanese&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Malaysian&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Mediterranean&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Mexican&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Middle Eastern&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Modern European&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Mongolian&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Moroccan&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Pakistani&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Pan Asian&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Persian/Iranian&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Peruvian&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Polish&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Puerto Rican&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Russian&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Salvadoran&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Scandinavian&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Spanish&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Taiwanese&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Thai&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Turkish&quot;' />
              <groupfilter function='member' level='[none:categories - Split 1:nk]' member='&quot;Vietnamese&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1r4yhan0qdkaqm1ezqn4k07gr04t].[none:categories - Split 1:nk]</column>
            <column>[federated.1r4yhan0qdkaqm1ezqn4k07gr04t].[Restaraunt - category (group) 1]</column>
            <column>[federated.1r4yhan0qdkaqm1ezqn4k07gr04t].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1r4yhan0qdkaqm1ezqn4k07gr04t].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1r4yhan0qdkaqm1ezqn4k07gr04t].[Multiple Values]</rows>
        <cols>([federated.1r4yhan0qdkaqm1ezqn4k07gr04t].[none:state:nk] / [federated.1r4yhan0qdkaqm1ezqn4k07gr04t].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{85C180CC-7909-4BB3-95D0-EE32214CD54C}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='State - Avg disease'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1r4yhan0qdkaqm1ezqn4k07gr04t].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1r4yhan0qdkaqm1ezqn4k07gr04t].[:Measure Names]</field>
            <field>[federated.1r4yhan0qdkaqm1ezqn4k07gr04t].[Restaraunt - category (group) 1]</field>
            <field>[federated.1r4yhan0qdkaqm1ezqn4k07gr04t].[Restaraunt - category (group)]</field>
            <field>[federated.1r4yhan0qdkaqm1ezqn4k07gr04t].[none:categories - Split 1:nk]</field>
            <field>[federated.1r4yhan0qdkaqm1ezqn4k07gr04t].[none:categories:nk]</field>
            <field>[federated.1r4yhan0qdkaqm1ezqn4k07gr04t].[none:city:nk]</field>
            <field>[federated.1r4yhan0qdkaqm1ezqn4k07gr04t].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{220A9123-5C0C-4177-ABFC-64BA86E91BC6}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='State - Avg disease' width='384'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
